{"mappings":"AAAaA,SAASC,cAAc,SAApC,MACMC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBACtBD,SAASC,cAAc,yBAe/BI,iBAAiB,SAAS,SAAUC,GAC/CA,EAAMC,iBACN,IAAIC,EAAYC,OAAOP,EAAWQ,OAC9BC,EAAWF,OAAON,EAAUO,OAC5BE,EAAaH,OAAOL,EAAYM,OAChCG,EAAkB,GAGtB,SAASC,IACT,GAAID,GAAmBD,EAAY,EArBrC,SAAuBG,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAcPQ,CAAcX,EADAL,GAAaK,EAAkB,GAAKF,GAE/Cc,MAAKC,IACJC,QAAQC,IAAI,uBAAqBF,EAAIX,eAAoBW,EAAEV,UAAe,IAE3Ea,OAAMC,IACLH,QAAQC,IAAI,sBAAoBE,EAAEf,eAAmBe,EAAEd,UAAc,IAEtEe,SAAQ,KACPvB,GAAYG,EACZE,IACAC,GAAgB,G,EAItBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\nconst buttonSubmit = document.querySelector('button[type=\"submit\"]');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n  } else {\n      reject({ position, delay });\n  }\n  }, delay);\n  })\n}\nbuttonSubmit.addEventListener('click', function (event) {\n  event.preventDefault();\n  let delaySome = Number(inputDelay.value);\n  let stepSome = Number(inputStep.value);\n  let amountSome = Number(inputAmount.value);\n  let currentPosition = 1;\n\n\n  function processPromise() {\n  if (currentPosition <= amountSome) {\n    const delay = delaySome + (currentPosition - 1) * stepSome;\n    createPromise(currentPosition, delay)\n      .then(result => {\n        console.log(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n      })\n      .catch(error => {\n        console.log(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n      })\n      .finally(() => {\n        delaySome +=stepSome;\n        currentPosition++;\n        processPromise();\n      });\n    }\n  } \n  processPromise();\n})"],"names":["document","querySelector","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","addEventListener","event","preventDefault","delaySome","Number","value","stepSome","amountSome","currentPosition","processPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$createPromise","then","result","console","log","catch","error","finally"],"version":3,"file":"03-promises.9dddc7ad.js.map"}