{"mappings":"YAAaA,SAASC,cAAc,SAApC,IACMC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBACtBD,SAASC,cAAc,yBAe/BI,iBAAiB,SAAS,SAAUC,GAC/CA,EAAMC,iBACN,IAAIC,EAAYC,OAAOP,EAAWQ,OAC9BC,EAAWF,OAAON,EAAUO,OAC5BE,EAAaH,OAAOL,EAAYM,OAChCG,EAAkB,GAGtB,SAASC,IACLD,GAAmBD,GArBzB,SAAuBG,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAcDQ,CAAcX,EADAL,GAAaK,EAAkB,GAAKF,GAE/Cc,MAAK,SAAAC,GACJC,QAAQC,IAAI,uBAA+CC,OAAtBH,EAAOX,SAAS,QAAmBc,OAAbH,EAAOV,MAAM,M,IAEzEc,OAAM,SAAAC,GACLJ,QAAQC,IAAI,sBAA2CC,OAArBE,EAAMhB,SAAS,QAAkBc,OAAZE,EAAMf,MAAM,M,IAEpEgB,SAAQ,WACPxB,GAAYG,EACZE,IACAC,G,IAINA,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\nconst buttonSubmit = document.querySelector('button[type=\"submit\"]');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n  } else {\n      reject({ position, delay });\n  }\n  }, delay);\n  })\n}\nbuttonSubmit.addEventListener('click', function (event) {\n  event.preventDefault();\n  let delaySome = Number(inputDelay.value);\n  let stepSome = Number(inputStep.value);\n  let amountSome = Number(inputAmount.value);\n  let currentPosition = 1;\n\n\n  function processPromise() {\n  if (currentPosition <= amountSome) {\n    const delay = delaySome + (currentPosition - 1) * stepSome;\n    createPromise(currentPosition, delay)\n      .then(result => {\n        console.log(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n      })\n      .catch(error => {\n        console.log(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n      })\n      .finally(() => {\n        delaySome +=stepSome;\n        currentPosition++;\n        processPromise();\n      });\n    }\n  } \n  processPromise();\n})"],"names":["document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","event","preventDefault","delaySome","Number","value","stepSome","amountSome","currentPosition","processPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","result","console","log","concat","catch","error","finally"],"version":3,"file":"03-promises.a1f95942.js.map"}